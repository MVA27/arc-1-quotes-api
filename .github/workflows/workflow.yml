name: Build and Deploy .NET Application and React js

on:
  push:
    branches:
      - main

jobs:

  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout Code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Setup Node.js (v18.16.1)
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18.16.1
      
    - name: Set Enviroment variable
      run: |
        echo "VITE_API_URL=http://${{ secrets.ELASTIC_IP }}:80" >> frontend/.env

    # Step 3: Install Dependencies and Build Vite App
    - name: Install dependencies and build
      run: |
        cd frontend
        npm install
        npm run build

    # Step 4: Deploy Build Files to S3
    - name: Deploy to S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}  # Using the secret here
      run: |
        aws s3 sync frontend/dist/ s3://$S3_BUCKET_NAME --delete

  build:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up .NET SDK
      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      # Restore dependencies
      - name: Restore dependencies
        run: dotnet restore Backend/Backend.sln

      # Build the project
      - name: Build the project
        run: dotnet build Backend/Backend.sln --configuration Release

      # Publish the project
      - name: Publish the project
        run: dotnet publish Backend/Quotes.Api/Quotes.Api.csproj -c Release -o ./publish

      # Build the Docker image with the 'my-dotnet-app' tag
      - name: Build Docker image
        run: docker build --build-arg DB_CONNECTION_STRING="${{ secrets.DB_CONNECTION_STRING }}" -t backend-api .

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Tag the Docker image for Docker Hub repository
      - name: Tag Docker image
        run: docker tag backend-api ${{ secrets.DOCKER_USERNAME }}/arc-1-dockerhub:v1

      # Push the tagged Docker image to Docker Hub
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/arc-1-dockerhub:v1